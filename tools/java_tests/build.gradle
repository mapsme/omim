/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 't.danshin' at '11/6/15 2:25 PM' with Gradle 2.6
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'


repositories {
    jcenter()
    mavenCentral()
}


// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.json:json:20150729'
    compile 'org.jdom:jdom2:2.0.6'
    compile 'commons-cli:commons-cli:1.3'
    compile 'junit:junit:4.12'
    compile 'org.slf4j:slf4j-log4j12:1.7.12'



    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.slf4j:slf4j-log4j12:1.7.12'
}


task obbGenerate(type: GradleBuild) {
    buildFile = '../../android/build.gradle'
    dir = "../../android"
    tasks = ['obbGenerate']
}



task appClean(type: GradleBuild) {
    buildFile = '../../android/build.gradle'
    dir = "../../android"
    tasks = ['clean']
}


task buildApplication(type: GradleBuild) {
    buildFile = '../../android/build.gradle'
    dir = "../../android"
    tasks = ['assembleGoogleRelease']
}



 task deviceTests (type: Test, dependsOn: [testClasses]) {//, obbGenerate, appClean, buildApplication]) {
// task deviceTests (type: Test, dependsOn: [testClasses, obbGenerate, appClean, buildApplication]) {
    filter {
      	includeTestsMatching "me.maps.deviceTests.*"
    }
}


task(runSimple, dependsOn: 'classes', type: JavaExec) {
	main = 'me.maps.BoostToJUnit'
	classpath = sourceSets.main.runtimeClasspath
	
	def myArgs = []
	
	if (project.hasProperty('i')) {
		myArgs.add('-i', i)
	}
	
	if (project.hasProperty('o')) {
		myArgs.add('-o', o)
	}

	if (project.hasProperty('t')) {
		myArgs.add('-t', t)
	}



	args myArgs
	
}



task showMeCache << {
  configurations.compile.each { println it }
}


