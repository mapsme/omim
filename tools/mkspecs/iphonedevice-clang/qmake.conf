#
# qmake configuration for iphone device
#

# Don't forget to set PATH in QT creator project environment
# to include /Developer/Platforms/iPhoneOS.platform/Developer/usr/bin
# where gcc an all tools are actually resides 

IPHONE_SDK_PATH           = $$(SDK_ROOT)
isEmpty( IPHONE_SDK_PATH ) : error(Please set SDK_ROOT environment variable)

BUILD_ARCH                = $$(BUILD_ARCHITECTURE)
isEmpty( BUILD_ARCH )      : error(Please check that BUILD_ARCHITECTURE environment variable is set)

MAKEFILE_GENERATOR        = UNIX
TEMPLATE                  = app
CONFIG                   += hide_symbols warn_on dwarf2 app_bundle incremental global_init_link_order lib_version_first plugin_no_soname link_prl
QMAKE_INCREMENTAL_STYLE   = sublib

QMAKE_COMPILER            = clang
QMAKE_CC                  = clang   -arch $$BUILD_ARCH
QMAKE_CXX                 = clang++ -arch $$BUILD_ARCH
QMAKE_APPLE_DEVICE_ARCHS  = $$BUILD_ARCH

QMAKE_RESOURCE            =

QMAKE_EXTENSION_SHLIB     = dylib

QMAKE_LIBDIR              =
QMAKE_INCDIR_QT           = $$[QT_INSTALL_HEADERS]
QMAKE_LIBDIR_QT           = $$[QT_INSTALL_LIBS]
QMAKE_INCDIR_OPENGL       =

QMAKE_FIX_RPATH           = install_name_tool -id 

QMAKE_LIBS_DYNLOAD        =
QMAKE_LIBS_OPENGL         =
QMAKE_LIBS_OPENGL_QT      = $$QMAKE_LIBS_OPENGL
QMAKE_LIBS_THREAD         =

QMAKE_MOC                 = $$[QT_INSTALL_BINS]/moc
QMAKE_UIC                 = $$[QT_INSTALL_BINS]/uic

#QMAKE_AR                 = ar cq
QMAKE_AR                  = libtool -static -syslibroot $$IPHONE_SDK_PATH -o
#QMAKE_RANLIB             = ranlib -s

QMAKE_TAR                 = tar -cf
QMAKE_GZIP                = gzip -9f

QMAKE_COPY                = cp -f
QMAKE_COPY_FILE           = $$QMAKE_COPY
QMAKE_COPY_DIR            = $$QMAKE_COPY -R
QMAKE_MOVE                = mv -f
QMAKE_DEL_FILE            = rm -f
QMAKE_DEL_DIR             = rmdir
QMAKE_CHK_DIR_EXISTS      = test -d
QMAKE_MKDIR               = mkdir -p

QMAKE_PREFIX_SHLIB        = lib
QMAKE_PREFIX_STATICLIB    = lib
QMAKE_EXTENSION_STATICLIB = a

QMAKE_COMPILER_DEFINES    += __GNUC__
DEFINES                   += __IPHONE_OS_VERSION_MIN_REQUIRED=70000
QMAKE_CFLAGS		          += -isysroot $$IPHONE_SDK_PATH
QMAKE_CFLAGS              += -fmessage-length=0
QMAKE_CFLAGS              += -pipe -miphoneos-version-min=8.0 -Wno-deprecated-register
QMAKE_CFLAGS_DEPS         += -M
QMAKE_CFLAGS_WARN_ON      += -Wall -W
QMAKE_CFLAGS_WARN_OFF     += -w
QMAKE_CFLAGS_RELEASE      += -g -O3 -funroll-loops -DNS_BLOCK_ASSERTIONS=1
QMAKE_CFLAGS_DEBUG        += -g
QMAKE_CFLAGS_SHLIB        += 
QMAKE_CFLAGS_STATIC_LIB   += 
QMAKE_CFLAGS_YACC         += -Wno-unused -Wno-parentheses
QMAKE_CFLAGS_HIDESYMS     += -fvisibility=hidden
QMAKE_CFLAGS_PRECOMPILE   += -x c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_CFLAGS_USE_PRECOMPILE += -include ${QMAKE_PCH_OUTPUT_BASE}

QMAKE_CFLAGS_X86              += -arch i386
QMAKE_CFLAGS_X86_64           += -arch x86_64
QMAKE_OBJECTIVE_CFLAGS_X86    += -arch i386
QMAKE_OBJECTIVE_CFLAGS_X86_64 += -arch x86_64
QMAKE_CFLAGS_DWARF2           += -gdwarf-2

QMAKE_OBJECTIVE_CFLAGS    += $$QMAKE_CFLAGS -fobjc-abi-version=2 -fobjc-legacy-dispatch $$QMAKE_CFLAGS_HIDESYMS -std=c++11 -stdlib=libc++

QMAKE_CXXFLAGS            += $$QMAKE_CFLAGS -std=c++11 -stdlib=libc++
QMAKE_CXXFLAGS_DEPS       += $$QMAKE_CFLAGS_DEPS
QMAKE_CXXFLAGS_WARN_ON    += $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF   += $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE    += $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG      += $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB      += $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_STATIC_LIB += $$QMAKE_CFLAGS_STATIC_LIB
QMAKE_CXXFLAGS_YACC       += $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_HIDESYMS   += $$QMAKE_CFLAGS_HIDESYMS -fvisibility-inlines-hidden
QMAKE_CXXFLAGS_PPC        += -arch ppc
QMAKE_CXXFLAGS_X86        += -arch i386
QMAKE_CXXFLAGS_X86_64     += -arch x86_64
QMAKE_CXXFLAGS_DWARF2     += $$QMAKE_CFLAGS_DWARF2
QMAKE_CXXFLAGS_PRECOMPILE += -x c++-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_CXXFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE

QMAKE_INCDIR_EGL          += $$IPHONE_SDK_PATH/System/Library/Frameworks/OpenGLES.framework

QMAKE_LINK                = $$QMAKE_CXX
QMAKE_LINK_SHLIB          = $$QMAKE_CXX
QMAKE_LINK_C              = $$QMAKE_CC
QMAKE_LINK_C_SHLIB        = $$QMAKE_CC
QMAKE_LFLAGS              += -stdlib=libc++ -miphoneos-version-min=8.0 -headerpad_max_install_names -Xlinker "-syslibroot $$IPHONE_SDK_PATH"
QMAKE_LFLAGS_RELEASE      += -O3
QMAKE_LFLAGS_DEBUG        +=
QMAKE_LFLAGS_APP          +=
QMAKE_LFLAGS_SHLIB        += -single_module -dynamiclib
QMAKE_LFLAGS_PLUGIN       += $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_THREAD       +=
QMAKE_LFLAGS_INCREMENTAL  += -undefined suppress -flat_namespace
QMAKE_LFLAGS_SONAME       += -install_name$${LITERAL_WHITESPACE}
QMAKE_LFLAGS_PPC          += -arch ppc
QMAKE_LFLAGS_X86          += -arch i386
QMAKE_LFLAGS_X86_64       += -arch x86_64
QMAKE_LFLAGS_VERSION      += -current_version$${LITERAL_WHITESPACE}
QMAKE_LFLAGS_COMPAT_VERSION += -compatibility_version$${LITERAL_WHITESPACE}
# -all_load requred to make Objective-C categories work in static builds.
QMAKE_LFLAGS_STATIC_LIB   += -all_load

QMAKE_PCH_OUTPUT_EXT      = .gch

QMAKE_OBJCFLAGS_PRECOMPILE += -x objective-c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_OBJCFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE

QMAKE_OBJCXXFLAGS_PRECOMPILE += -x objective-c++-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_OBJCXXFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE

load(qt_config)
