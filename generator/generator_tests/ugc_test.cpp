#include "testing/testing.hpp"

#include "generator/ugc_db.hpp"
#include "generator/ugc_translator.hpp"
#include "generator/osm_id.hpp"

#include "ugc/types.hpp"

std::string g_database(R"LLL(
   PRAGMA foreign_keys=OFF;
   BEGIN TRANSACTION;
   CREATE TABLE agg (id bigint, data blob);
   INSERT INTO "agg" VALUES(1,X'7B22637269746572696F6E5F6964223A20332C202276616C7565223A20322E307D');
   INSERT INTO "agg" VALUES(2,X'7B22637269746572696F6E5F6964223A20372C202276616C7565223A20332E307D');
   INSERT INTO "agg" VALUES(3,X'7B22637269746572696F6E5F6964223A20382C202276616C7565223A20322E307D');
   INSERT INTO "agg" VALUES(4,X'7B22637269746572696F6E5F6964223A2031302C202276616C7565223A20322E363636363636363636363636363636357D');
   INSERT INTO "agg" VALUES(5,X'7B22637269746572696F6E5F6964223A2031322C202276616C7565223A20352E307D');
   INSERT INTO "agg" VALUES(6,X'7B22637269746572696F6E5F6964223A2031342C202276616C7565223A20342E307D');
   INSERT INTO "agg" VALUES(1,X'7B22637269746572696F6E5F6964223A206E756C6C2C202276616C7565223A20322E393238353731343238353731343238347D');
   INSERT INTO "agg" VALUES(2,X'7B22637269746572696F6E5F6964223A206E756C6C2C202276616C7565223A20332E3033393530363137323833393530367D');
   INSERT INTO "agg" VALUES(3,X'7B22637269746572696F6E5F6964223A206E756C6C2C202276616C7565223A20322E393735333038363431393735333038357D');
   INSERT INTO "agg" VALUES(4,X'7B22637269746572696F6E5F6964223A206E756C6C2C202276616C7565223A20332E3037363932333037363932333037377D');
   COMMIT;
)LLL");


UNIT_TEST(UGC_SmokeTest)
{
  generator::UGCDB db(":memory:");
  bool create = db.Exec(g_database);
  TEST(create, ("Can't open database"));
  osm::Id id = osm::Id(1);
  std::vector<uint8_t> blob;
  bool rc = db.Get(id, blob);
  TEST(rc, ("Can't load data for", id));
  std::string result(blob.cbegin(), blob.cend());
  std::cout << result << std::endl;
}

UNIT_TEST(UGC_TranslateRatingTest)
{
  generator::UGCTranslator tr;
  tr.CreateRatings(g_database);
  osm::Id id = osm::Id(6);

  ugc::UGC ugc;
  bool rc = tr.TranslateUGC(id, ugc);
  TEST(rc, ("Can't translate rating for", id));

  TEST_EQUAL(ugc.m_ratings.size(), 1, ());
  TEST_EQUAL(ugc.m_ratings[0].m_key, "TranslationKey14", ());
  TEST_EQUAL(ugc.m_ratings[0].m_value, 4.0, ());
}
